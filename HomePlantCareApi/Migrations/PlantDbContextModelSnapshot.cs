// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Web_Application_for_Home_Plant_Care.Models;

#nullable disable

namespace HomePlantCareApi.Migrations
{
    [DbContext(typeof(PlantDbContext))]
    partial class PlantDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.20")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.Plant", b =>
                {
                    b.Property<int>("PlantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantID"));

                    b.Property<DateTime>("DateLastTransplant")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateLastWatering")
                        .HasColumnType("datetime2");

                    b.Property<string>("PlantDescription")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantTypeID")
                        .HasColumnType("int");

                    b.HasKey("PlantID");

                    b.HasIndex("PlantTypeID");

                    b.ToTable("Plants");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.PlantCare", b =>
                {
                    b.Property<int>("CareID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("CareID"));

                    b.Property<DateTime>("CareDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("CareType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.HasKey("CareID");

                    b.HasIndex("PlantID");

                    b.ToTable("PlantCares");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.PlantType", b =>
                {
                    b.Property<int>("PlantTypeID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PlantTypeID"));

                    b.Property<string>("PlantTypeName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PlantTypePhoto")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SoilType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TemperatureRequirements")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TransplantFrequency")
                        .HasColumnType("int");

                    b.Property<int>("WateringFrequency")
                        .HasColumnType("int");

                    b.HasKey("PlantTypeID");

                    b.ToTable("PlantTypes");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.Reminder", b =>
                {
                    b.Property<int>("ReminderID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ReminderID"));

                    b.Property<bool>("IsCompleted")
                        .HasColumnType("bit");

                    b.Property<int>("PlantID")
                        .HasColumnType("int");

                    b.Property<DateTime>("ReminderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ReminderType")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ReminderID");

                    b.HasIndex("PlantID");

                    b.ToTable("Reminders");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.Plant", b =>
                {
                    b.HasOne("Web_Application_for_Home_Plant_Care.Models.PlantType", "PlantType")
                        .WithMany("Plants")
                        .HasForeignKey("PlantTypeID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PlantType");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.PlantCare", b =>
                {
                    b.HasOne("Web_Application_for_Home_Plant_Care.Models.Plant", "Plant")
                        .WithMany("PlantCares")
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.Reminder", b =>
                {
                    b.HasOne("Web_Application_for_Home_Plant_Care.Models.Plant", "Plant")
                        .WithMany("Reminders")
                        .HasForeignKey("PlantID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Plant");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.Plant", b =>
                {
                    b.Navigation("PlantCares");

                    b.Navigation("Reminders");
                });

            modelBuilder.Entity("Web_Application_for_Home_Plant_Care.Models.PlantType", b =>
                {
                    b.Navigation("Plants");
                });
#pragma warning restore 612, 618
        }
    }
}
